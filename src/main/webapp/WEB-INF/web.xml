<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
<!--
    수정일          수성자                          수정내용
   ==========      ========      =================================================
   2011.9.19        이기하         filter 정리
   2013.5.31        이기하         미사용 filter 정리(.mdo, .action)

  ************************************************************************************************
    0. 로그인 정책 컴포넌트용 필터 : 주석
    1. 스프링 시큐리티 설정 : 주석
    2. EgovSSO 로그인/로그아웃 설정을 위한 필터 설정 : 주석
    3. Spring Security 로그인/로그아웃 설정을 위한 필터 설정 : 주석
  ************************************************************************************************
-->
	<display-name>Default</display-name>
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter>
	    <filter-name>httpMethodFilter</filter-name>
	    <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>httpMethodFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>
	
	
	
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:egovframework/spring/com/**/context-*.xml</param-value>
	</context-param>
	
	
	
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	
	
	<servlet>
		<servlet-name>action</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/config/egovframework/springmvc/egov-com-*.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	
	
	<servlet-mapping>
		<servlet-name>action</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	
	<!-- 서비스 부분에서 HttpServletRequest 정보 얻기 -->
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>



	<!-- AjaxTags configuration START -->
	<servlet>
		<servlet-name>ajaxServlet</servlet-name>
		<servlet-class>net.sourceforge.ajaxtags.servlets.SourceLoader</servlet-class>
		<init-param>
			<param-name>prefix</param-name>
			<param-value>/ajaxtags</param-value>
		</init-param>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>ajaxServlet</servlet-name>
		<url-pattern>/ajaxtags/js/*</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>ajaxServlet</servlet-name>
		<url-pattern>/ajaxtags/img/*</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>ajaxServlet</servlet-name>
		<url-pattern>/ajaxtags/css/*</url-pattern>
	</servlet-mapping>
	
	
	
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
	
	<login-config>
		<auth-method>BASIC</auth-method>
	</login-config>
	
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
	
	<error-page>
		<error-code>400</error-code>
		<location>/WEB-INF/views/error/400.jsp</location>
	</error-page>
	
	<error-page>
		<error-code>404</error-code>
		<location>/WEB-INF/views/error/404.jsp</location>
	</error-page>
	
	<error-page>
		<error-code>500</error-code>
		<location>/WEB-INF/views/error/500.jsp</location>
	</error-page>
	
	<error-page>
		<error-code>503</error-code>
		<location>/WEB-INF/views/error/503.jsp</location>
	</error-page>
	
	<!-- Spring security -->
	<!-- fileter-name: springSecurityFilterChain은 spring security 자신을 DelegatingFilterProxy와 연결 하기 위하여 springSecurityFilterChain 라는 필터이름을 요구한다. -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- Session Listener(중복 로그인 방지) -->
	<listener>
		<listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
	</listener>
	    
</web-app>